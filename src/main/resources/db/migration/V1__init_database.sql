CREATE TABLE IF NOT EXISTS Cron_Schedule(
	id int AUTO_INCREMENT NOT NULL PRIMARY KEY,
	job_Name varchar(100) NOT NULL,
	cron_Expression varchar(50) NOT NULL,
	is_Active varchar(1),	
	description varchar(255),
	ord smallint NOT NULL
);

CREATE TABLE IF NOT EXISTS Cron_Job(
	id int AUTO_INCREMENT NOT NULL PRIMARY KEY,
	job_Name varchar(100) NOT NULL,
	cron_Expression varchar(50) NOT NULL,
	status varchar(1) NOT NULL,	
	start_Time TIMESTAMP NOT NULL,
	end_Time TIMESTAMP NOT NULL,
	log_Info varchar(500),
	description varchar(500),
	Cron_Schedule_id int
);
ALTER TABLE Cron_Job ADD FOREIGN KEY (Cron_Schedule_id)  REFERENCES Cron_Schedule(id);

CREATE TABLE IF NOT EXISTS market_api (
	id varchar(50) NOT NULL PRIMARY KEY,
	market_name  varchar(50) NOT NULL,
	url  varchar(100) NOT NULL,
	is_Active  varchar(1) NOT NULL,
	description  varchar(100) NOT NULL,
	Java_Class varchar(100) NOT NULL,
	Java_Method varchar(100) NOT NULL,
	ord smallint
);

CREATE TABLE IF NOT EXISTS currency_list(
	id varchar(5) NOT NULL PRIMARY KEY,
	description varchar(200) NOT NULL,
	is_Active varchar(1) NOT NULL,
	market_api_Id varchar(50) NOT NULL,
	ord smallint NOT NULL
);
ALTER TABLE currency_list ADD FOREIGN KEY (market_api_Id)  REFERENCES market_api(id);
 
CREATE TABLE IF NOT EXISTS bitcoin_exchange(
	id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 2893) NOT NULL PRIMARY KEY,
	market_api_Id varchar(50) NOT NULL,
	currency_Code varchar(5) NOT NULL,
	symbol varchar(20),
	rate_Float NUMERIC(20, 4) NOT NULL,
	created_Date DATE NOT NULL,
	created_Time_Stamp TIMESTAMP NOT NULL,
	Cron_Job_id int
);
ALTER TABLE bitcoin_exchange ADD FOREIGN KEY (market_api_Id)  REFERENCES market_api(id);
ALTER TABLE bitcoin_exchange ADD FOREIGN KEY (currency_Code)  REFERENCES currency_list(id);
ALTER TABLE bitcoin_exchange ADD FOREIGN KEY (Cron_Job_id)  REFERENCES Cron_Job(id);
CREATE INDEX idx_bitcoin_exchange_currencyCode_createdDate on bitcoin_exchange (currency_Code,created_Date);

CREATE TABLE IF NOT EXISTS Bitcoin_Analyze(
	id int AUTO_INCREMENT NOT NULL PRIMARY KEY,
	market_api_Id varchar(50) NOT NULL,
	currency_Code varchar(5) NOT NULL,
	symbol varchar(20),	
	Open_Rate_Float NUMERIC(20, 4) NOT NULL,
	Closed_Rate_Float NUMERIC(20, 4) NOT NULL,
	ratio_open_closed_rate NUMERIC(20, 4) NOT NULL,
	Max_Rate_Float NUMERIC(20, 4) NOT NULL,
	Min_Rate_Float NUMERIC(20, 4) NOT NULL,
	ratio_rate_float NUMERIC(20, 4) NOT NULL,
	description varchar(255),
	created_Date DATE NOT NULL,
	created_Time_Stamp TIMESTAMP NOT NULL,
	time_Type varchar(15) NOT NULL
);
CREATE INDEX idx_Bitcoin_Analyze_currencyCode_createdDate on Bitcoin_Analyze (currency_Code,created_Date);
--INSERT INTO market_api
--(id, market_name,url, is_Active, description,Java_Class,Java_Method,ord)
--VALUES('coindesk', 'coindesk api','http://localhost:8034/bcanalyze', 'Y','coindesk api', 'myapp.bitcoin_analyze.service.CoinDeskService','fetchCurrentPrice',1);

INSERT INTO market_api
(id, market_name,url, is_Active, description,Java_Class,Java_Method,ord)
VALUES('coindesk', 'coindesk api','http://api.coindesk.com/v1/bpi/currentprice.json', 'Y','coindesk api', 'myapp.bitcoin_analyze.service.CoinDeskService','fetchCurrentPrice',1);

INSERT INTO market_api
(id, market_name,url, is_Active, description,Java_Class,Java_Method,ord)
VALUES('binance', 'binance api','https://api.binance.com/api/v3/ticker/price', 'N','binance api', 'myapp.bitcoin_analyze.service.BinanceService','fetchCurrentPrice',2);

--select * from market_api

insert into currency_list(id,description,is_Active,market_api_Id,ord)
VALUES('USD','United States Dollar','Y','coindesk',1);
insert into currency_list(id,description,is_Active,market_api_Id,ord)
VALUES('GBP','British Pound Sterling','Y','coindesk',2);
insert into currency_list(id,description,is_Active,market_api_Id,ord)
VALUES('EUR','Euro','Y','coindesk',3);
--select * from currency_list

insert into Cron_Schedule(id,job_Name,cron_Expression,is_Active,description,ord)
VALUES(1,'ScheduleFetchCurrentPrice','*/5 * * ? * *','Y','fetch data from coindesk,binance and insert to bitcoin_exchange',1);

insert into Cron_Schedule(id,job_Name,cron_Expression,is_Active,description,ord)
VALUES(2,'ScheduleBitcoinAnalyzePreviousDay','*/6 * * ? * *','Y','Analyze data previous day of coindesk,binance and insert to Bitcoin_Analyze',2);

insert into Cron_Schedule(id,job_Name,cron_Expression,is_Active,description,ord)
VALUES(3,'ScheduleBitcoinAnalyzePreviousWeek','*/7 * * ? * *','Y','Analyze data previous week of coindesk,binance and insert to Bitcoin_Analyze',3);

insert into Cron_Schedule(id,job_Name,cron_Expression,is_Active,description,ord)
VALUES(4,'ScheduleBitcoinAnalyzePreviousMonth','*/8 * * ? * *','Y','Analyze data previous month of coindesk,binance and insert to Bitcoin_Analyze',4);
--https://www.investing.com/crypto/bitcoin/historical-data
